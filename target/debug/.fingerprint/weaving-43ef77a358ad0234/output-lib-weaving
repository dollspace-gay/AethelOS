{"$message_type":"diagnostic","message":"you seem to be trying to use `match` for destructuring a single pattern. Consider using `if let`","code":{"code":"clippy::single_match","explanation":null},"level":"warning","spans":[{"file_name":"ancient-runes\\weaving\\src\\lib.rs","byte_start":1846,"byte_end":2073,"line_start":84,"line_end":91,"column_start":9,"column_end":10,"is_primary":true,"text":[{"text":"        match event {","highlight_start":9,"highlight_end":22},{"text":"            Event::MouseDown { button: MouseButton::Left } => {","highlight_start":1,"highlight_end":64},{"text":"                if let Some(callback) = self.on_click {","highlight_start":1,"highlight_end":56},{"text":"                    callback();","highlight_start":1,"highlight_end":32},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"            _ => {}","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`#[warn(clippy::single_match)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"try","code":null,"level":"help","spans":[{"file_name":"ancient-runes\\weaving\\src\\lib.rs","byte_start":1846,"byte_end":2073,"line_start":84,"line_end":91,"column_start":9,"column_end":10,"is_primary":true,"text":[{"text":"        match event {","highlight_start":9,"highlight_end":22},{"text":"            Event::MouseDown { button: MouseButton::Left } => {","highlight_start":1,"highlight_end":64},{"text":"                if let Some(callback) = self.on_click {","highlight_start":1,"highlight_end":56},{"text":"                    callback();","highlight_start":1,"highlight_end":32},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"            _ => {}","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":"if let Event::MouseDown { button: MouseButton::Left } = event {\n            if let Some(callback) = self.on_click {\n                callback();\n            }\n        }","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[1m\u001b[93mwarning\u001b[0m\u001b[1m\u001b[97m: you seem to be trying to use `match` for destructuring a single pattern. Consider using `if let`\u001b[0m\n  \u001b[1m\u001b[96m--> \u001b[0mancient-runes\\weaving\\src\\lib.rs:84:9\n   \u001b[1m\u001b[96m|\u001b[0m\n\u001b[1m\u001b[96m84\u001b[0m \u001b[1m\u001b[96m|\u001b[0m \u001b[1m\u001b[93m/\u001b[0m         match event {\n\u001b[1m\u001b[96m85\u001b[0m \u001b[1m\u001b[96m|\u001b[0m \u001b[1m\u001b[93m|\u001b[0m             Event::MouseDown { button: MouseButton::Left } => {\n\u001b[1m\u001b[96m86\u001b[0m \u001b[1m\u001b[96m|\u001b[0m \u001b[1m\u001b[93m|\u001b[0m                 if let Some(callback) = self.on_click {\n\u001b[1m\u001b[96m87\u001b[0m \u001b[1m\u001b[96m|\u001b[0m \u001b[1m\u001b[93m|\u001b[0m                     callback();\n\u001b[1m\u001b[96m...\u001b[0m  \u001b[1m\u001b[93m|\u001b[0m\n\u001b[1m\u001b[96m90\u001b[0m \u001b[1m\u001b[96m|\u001b[0m \u001b[1m\u001b[93m|\u001b[0m             _ => {}\n\u001b[1m\u001b[96m91\u001b[0m \u001b[1m\u001b[96m|\u001b[0m \u001b[1m\u001b[93m|\u001b[0m         }\n   \u001b[1m\u001b[96m|\u001b[0m \u001b[1m\u001b[93m|_________^\u001b[0m\n   \u001b[1m\u001b[96m|\u001b[0m\n   \u001b[1m\u001b[96m= \u001b[0m\u001b[1m\u001b[97mhelp\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match\n   \u001b[1m\u001b[96m= \u001b[0m\u001b[1m\u001b[97mnote\u001b[0m: `#[warn(clippy::single_match)]` on by default\n\u001b[1m\u001b[96mhelp\u001b[0m: try\n   \u001b[1m\u001b[96m|\u001b[0m\n\u001b[1m\u001b[96m84\u001b[0m \u001b[92m~ \u001b[0m        \u001b[92mif let Event::MouseDown { button: MouseButton::Left } = event {\u001b[0m\n\u001b[1m\u001b[96m85\u001b[0m \u001b[92m+             if let Some(callback) = self.on_click {\u001b[0m\n\u001b[1m\u001b[96m86\u001b[0m \u001b[92m+                 callback();\u001b[0m\n\u001b[1m\u001b[96m87\u001b[0m \u001b[92m+             }\u001b[0m\n\u001b[1m\u001b[96m88\u001b[0m \u001b[92m+         }\u001b[0m\n   \u001b[1m\u001b[96m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"1 warning emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[1m\u001b[93mwarning\u001b[0m\u001b[1m\u001b[97m: 1 warning emitted\u001b[0m\n\n"}
